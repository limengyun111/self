(()=>{"use strict";var e,r={233:(e,r,t)=>{var n=t(848),o=t(338),s=t(181);const c=t.p+"34905b9d8113f82e9a887827eab14b4a.jpeg",a=[{path:"/",component:()=>(0,n.jsxs)("div",{children:[(0,n.jsx)("span",{className:"tp1NCmlPhznmN6XWSaLQ",children:"欢迎登录控制台"}),(0,n.jsx)(s.N_,{to:"/service",children:"跳转到服务列表"}),(0,n.jsx)("div",{children:(0,n.jsx)("img",{src:c,alt:""})})]})},{path:"/service",component:()=>(0,n.jsxs)("div",{children:["查看服务列表",(0,n.jsx)(s.N_,{to:"/service/detail",children:"跳转到服务详情"})]}),children:[{path:"/detail",component:()=>(0,n.jsx)("div",{className:"jgUYAzJjKNeyyWNbSsSv",children:"查看服务详情"})}]}],i=e=>{const r=[],t=e=>{for(const n of e){const{path:e,component:o,children:s}=n;if(r.push({path:e,component:o}),s&&Array.isArray(s)){const r=s.map((r=>Object.assign({},r,{path:e+r.path})));t(r)}}};return t(e),r},p=()=>(0,n.jsx)(s.BV,{children:i(a).map((e=>(0,n.jsx)(s.qh,{path:e.path,Component:e.component},e.path)))});console.log("app"),console.log("22v");const l=document.getElementById("root");(0,o.createRoot)(l).render((0,n.jsx)((()=>(0,n.jsx)(s.Kd,{children:(0,n.jsx)(p,{})})),{}))}},t={};function n(e){var o=t[e];if(void 0!==o)return o.exports;var s=t[e]={exports:{}};return r[e](s,s.exports,n),s.exports}n.m=r,e=[],n.O=(r,t,o,s)=>{if(!t){var c=1/0;for(l=0;l<e.length;l++){for(var[t,o,s]=e[l],a=!0,i=0;i<t.length;i++)(!1&s||c>=s)&&Object.keys(n.O).every((e=>n.O[e](t[i])))?t.splice(i--,1):(a=!1,s<c&&(c=s));if(a){e.splice(l--,1);var p=o();void 0!==p&&(r=p)}}return r}s=s||0;for(var l=e.length;l>0&&e[l-1][2]>s;l--)e[l]=e[l-1];e[l]=[t,o,s]},n.d=(e,r)=>{for(var t in r)n.o(r,t)&&!n.o(e,t)&&Object.defineProperty(e,t,{enumerable:!0,get:r[t]})},n.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(e){if("object"==typeof window)return window}}(),n.o=(e,r)=>Object.prototype.hasOwnProperty.call(e,r),(()=>{var e;n.g.importScripts&&(e=n.g.location+"");var r=n.g.document;if(!e&&r&&(r.currentScript&&"SCRIPT"===r.currentScript.tagName.toUpperCase()&&(e=r.currentScript.src),!e)){var t=r.getElementsByTagName("script");if(t.length)for(var o=t.length-1;o>-1&&(!e||!/^http(s?):/.test(e));)e=t[o--].src}if(!e)throw new Error("Automatic publicPath is not supported in this browser");e=e.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),n.p=e})(),(()=>{var e={792:0};n.O.j=r=>0===e[r];var r=(r,t)=>{var o,s,[c,a,i]=t,p=0;if(c.some((r=>0!==e[r]))){for(o in a)n.o(a,o)&&(n.m[o]=a[o]);if(i)var l=i(n)}for(r&&r(t);p<c.length;p++)s=c[p],n.o(e,s)&&e[s]&&e[s][0](),e[s]=0;return n.O(l)},t=self.webpackChunkself=self.webpackChunkself||[];t.forEach(r.bind(null,0)),t.push=r.bind(null,t.push.bind(t))})();var o=n.O(void 0,[539],(()=>n(233)));o=n.O(o)})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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QXNCakUsRUFBb0JRLEVBQUV5RCxFIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vc2VsZi93ZWJwYWNrL3J1bnRpbWUvY2h1bmsgbG9hZGVkIiwid2VicGFjazovL3NlbGYvLi9zcmMvcGFnZXMvQ29uc29sZS5tb2R1bGUuY3NzPzFlZDAiLCJ3ZWJwYWNrOi8vc2VsZi8uL3B1YmxpYy9hYS5qcGVnIiwid2VicGFjazovL3NlbGYvLi9zcmMvcm91dGUudHMiLCJ3ZWJwYWNrOi8vc2VsZi8uL3NyYy9wYWdlcy9Db25zb2xlLnRzeCIsIndlYnBhY2s6Ly9zZWxmLy4vc3JjL3BhZ2VzL1NlcnZpY2VMaXN0LnRzeCIsIndlYnBhY2s6Ly9zZWxmLy4vc3JjL3BhZ2VzL1NlcnZpY2VEZXRhaWwudHN4Iiwid2VicGFjazovL3NlbGYvLi9zcmMvcGFnZXMvU2VydmljZS5tb2R1bGUuY3NzP2YwNWUiLCJ3ZWJwYWNrOi8vc2VsZi8uL3NyYy91dGlscy50c3giLCJ3ZWJwYWNrOi8vc2VsZi8uL3NyYy9MYXlvdXQudHN4Iiwid2VicGFjazovL3NlbGYvLi9zcmMvQXBwLnRzeCIsIndlYnBhY2s6Ly9zZWxmLy4vc3JjL2luZGV4LnRzeCIsIndlYnBhY2s6Ly9zZWxmL3dlYnBhY2svYm9vdHN0cmFwIiwid2VicGFjazovL3NlbGYvd2VicGFjay9ydW50aW1lL2RlZmluZSBwcm9wZXJ0eSBnZXR0ZXJzIiwid2VicGFjazovL3NlbGYvd2VicGFjay9ydW50aW1lL2dsb2JhbCIsIndlYnBhY2s6Ly9zZWxmL3dlYnBhY2svcnVudGltZS9oYXNPd25Qcm9wZXJ0eSBzaG9ydGhhbmQiLCJ3ZWJwYWNrOi8vc2VsZi93ZWJwYWNrL3J1bnRpbWUvcHVibGljUGF0aCIsIndlYnBhY2s6Ly9zZWxmL3dlYnBhY2svcnVudGltZS9qc29ucCBjaHVuayBsb2FkaW5nIiwid2VicGFjazovL3NlbGYvd2VicGFjay9zdGFydHVwIl0sInNvdXJjZXNDb250ZW50IjpbInZhciBkZWZlcnJlZCA9IFtdO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5PID0gKHJlc3VsdCwgY2h1bmtJZHMsIGZuLCBwcmlvcml0eSkgPT4ge1xuXHRpZihjaHVua0lkcykge1xuXHRcdHByaW9yaXR5ID0gcHJpb3JpdHkgfHwgMDtcblx0XHRmb3IodmFyIGkgPSBkZWZlcnJlZC5sZW5ndGg7IGkgPiAwICYmIGRlZmVycmVkW2kgLSAxXVsyXSA+IHByaW9yaXR5OyBpLS0pIGRlZmVycmVkW2ldID0gZGVmZXJyZWRbaSAtIDFdO1xuXHRcdGRlZmVycmVkW2ldID0gW2NodW5rSWRzLCBmbiwgcHJpb3JpdHldO1xuXHRcdHJldHVybjtcblx0fVxuXHR2YXIgbm90RnVsZmlsbGVkID0gSW5maW5pdHk7XG5cdGZvciAodmFyIGkgPSAwOyBpIDwgZGVmZXJyZWQubGVuZ3RoOyBpKyspIHtcblx0XHR2YXIgW2NodW5rSWRzLCBmbiwgcHJpb3JpdHldID0gZGVmZXJyZWRbaV07XG5cdFx0dmFyIGZ1bGZpbGxlZCA9IHRydWU7XG5cdFx0Zm9yICh2YXIgaiA9IDA7IGogPCBjaHVua0lkcy5sZW5ndGg7IGorKykge1xuXHRcdFx0aWYgKChwcmlvcml0eSAmIDEgPT09IDAgfHwgbm90RnVsZmlsbGVkID49IHByaW9yaXR5KSAmJiBPYmplY3Qua2V5cyhfX3dlYnBhY2tfcmVxdWlyZV9fLk8pLmV2ZXJ5KChrZXkpID0+IChfX3dlYnBhY2tfcmVxdWlyZV9fLk9ba2V5XShjaHVua0lkc1tqXSkpKSkge1xuXHRcdFx0XHRjaHVua0lkcy5zcGxpY2Uoai0tLCAxKTtcblx0XHRcdH0gZWxzZSB7XG5cdFx0XHRcdGZ1bGZpbGxlZCA9IGZhbHNlO1xuXHRcdFx0XHRpZihwcmlvcml0eSA8IG5vdEZ1bGZpbGxlZCkgbm90RnVsZmlsbGVkID0gcHJpb3JpdHk7XG5cdFx0XHR9XG5cdFx0fVxuXHRcdGlmKGZ1bGZpbGxlZCkge1xuXHRcdFx0ZGVmZXJyZWQuc3BsaWNlKGktLSwgMSlcblx0XHRcdHZhciByID0gZm4oKTtcblx0XHRcdGlmIChyICE9PSB1bmRlZmluZWQpIHJlc3VsdCA9IHI7XG5cdFx0fVxuXHR9XG5cdHJldHVybiByZXN1bHQ7XG59OyIsIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpblxuZXhwb3J0IGRlZmF1bHQge1wiaGVhZFwiOlwidHAxTkNtbFBoem5tTjZYV1NhTFFcIn07IiwiZXhwb3J0IGRlZmF1bHQgX193ZWJwYWNrX3B1YmxpY19wYXRoX18gKyBcIjM0OTA1YjlkODExM2Y4MmU5YTg4NzgyN2VhYjE0YjRhLmpwZWdcIjsiLCJpbXBvcnQgQ29uc29sZSBmcm9tIFwiLi9wYWdlcy9Db25zb2xlXCI7XG5pbXBvcnQgU2VydmljZURldGFpbCBmcm9tIFwiLi9wYWdlcy9TZXJ2aWNlRGV0YWlsXCI7XG5pbXBvcnQgU2VydmljZUxpc3QgZnJvbSBcIi4vcGFnZXMvU2VydmljZUxpc3RcIjtcbmNvbnN0IHJvdXRlQ29uZmlnID0gW1xuICAgIHtcbiAgICAgICAgcGF0aDogJy8nLFxuICAgICAgICBjb21wb25lbnQ6IENvbnNvbGUsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIHBhdGg6ICcvc2VydmljZScsXG4gICAgICAgIGNvbXBvbmVudDogU2VydmljZUxpc3QsXG4gICAgICAgIGNoaWxkcmVuOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgcGF0aDogJy9kZXRhaWwnLFxuICAgICAgICAgICAgICAgIGNvbXBvbmVudDogU2VydmljZURldGFpbFxuICAgICAgICAgICAgfSxcbiAgICAgICAgXVxuICAgIH1cbl07XG5leHBvcnQgZGVmYXVsdCByb3V0ZUNvbmZpZztcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlclwiO1xuaW1wb3J0IHN0eWxlcyBmcm9tICcuL0NvbnNvbGUubW9kdWxlLmNzcyc7XG5pbXBvcnQgYWEgZnJvbSAnLi4vLi4vcHVibGljL2FhLmpwZWcnO1xuY29uc3QgQ29uc29sZSA9ICgpID0+IHtcbiAgICByZXR1cm4gKF9qc3hzKFwiZGl2XCIsIHsgY2hpbGRyZW46IFtfanN4KFwic3BhblwiLCB7IGNsYXNzTmFtZTogc3R5bGVzLmhlYWQsIGNoaWxkcmVuOiBcIlxcdTZCMjJcXHU4RkNFXFx1NzY3QlxcdTVGNTVcXHU2M0E3XFx1NTIzNlxcdTUzRjBcIiB9KSwgX2pzeChMaW5rLCB7IHRvOiBcIi9zZXJ2aWNlXCIsIGNoaWxkcmVuOiBcIlxcdThERjNcXHU4RjZDXFx1NTIzMFxcdTY3MERcXHU1MkExXFx1NTIxN1xcdTg4NjhcIiB9KSwgX2pzeChcImRpdlwiLCB7IGNoaWxkcmVuOiBfanN4KFwiaW1nXCIsIHsgc3JjOiBhYSwgYWx0OiBcIlwiIH0pIH0pXSB9KSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgQ29uc29sZTtcbiIsImltcG9ydCB7IGpzeCBhcyBfanN4LCBqc3hzIGFzIF9qc3hzIH0gZnJvbSBcInJlYWN0L2pzeC1ydW50aW1lXCI7XG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlclwiO1xuLy8gaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmNvbnN0IFNlcnZpY2VMaXN0ID0gKCkgPT4ge1xuICAgIHJldHVybiAoX2pzeHMoXCJkaXZcIiwgeyBjaGlsZHJlbjogW1wiXFx1NjdFNVxcdTc3MEJcXHU2NzBEXFx1NTJBMVxcdTUyMTdcXHU4ODY4XCIsIF9qc3goTGluaywgeyB0bzogXCIvc2VydmljZS9kZXRhaWxcIiwgY2hpbGRyZW46IFwiXFx1OERGM1xcdThGNkNcXHU1MjMwXFx1NjcwRFxcdTUyQTFcXHU4QkU2XFx1NjBDNVwiIH0pXSB9KSk7XG59O1xuZXhwb3J0IGRlZmF1bHQgU2VydmljZUxpc3Q7XG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuLy8gaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBzdHlsZXMgZnJvbSAnLi9TZXJ2aWNlLm1vZHVsZS5jc3MnO1xuY29uc3QgU2VydmljZURldGFpbCA9ICgpID0+IHtcbiAgICByZXR1cm4gKF9qc3goXCJkaXZcIiwgeyBjbGFzc05hbWU6IHN0eWxlcy5jb250YWluZXIsIGNoaWxkcmVuOiBcIlxcdTY3RTVcXHU3NzBCXFx1NjcwRFxcdTUyQTFcXHU4QkU2XFx1NjBDNVwiIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBTZXJ2aWNlRGV0YWlsO1xuIiwiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luXG5leHBvcnQgZGVmYXVsdCB7XCJjb250YWluZXJcIjpcImpnVVlBekpqS05leXlXTmJTc1N2XCJ9OyIsImV4cG9ydCBjb25zdCBleHRyYWN0Um91dGVzID0gKGFyeSkgPT4ge1xuICAgIGNvbnN0IHJlc3VsdCA9IFtdO1xuICAgIGNvbnN0IHRyYXZlcnNlID0gKHJvdXRlTGlzdCkgPT4ge1xuICAgICAgICBmb3IgKGNvbnN0IHJvdXRlIG9mIHJvdXRlTGlzdCkge1xuICAgICAgICAgICAgY29uc3QgeyBwYXRoLCBjb21wb25lbnQsIGNoaWxkcmVuIH0gPSByb3V0ZTtcbiAgICAgICAgICAgIHJlc3VsdC5wdXNoKHsgcGF0aCwgY29tcG9uZW50IH0pO1xuICAgICAgICAgICAgaWYgKGNoaWxkcmVuICYmIEFycmF5LmlzQXJyYXkoY2hpbGRyZW4pKSB7XG4gICAgICAgICAgICAgICAgY29uc3QgcGF0aENoaWxkcmVuID0gY2hpbGRyZW4ubWFwKChpdGVtKSA9PiB7IHJldHVybiBPYmplY3QuYXNzaWduKHt9LCBpdGVtLCB7IHBhdGg6IHBhdGggKyBpdGVtLnBhdGggfSk7IH0pO1xuICAgICAgICAgICAgICAgIHRyYXZlcnNlKHBhdGhDaGlsZHJlbik7XG4gICAgICAgICAgICB9XG4gICAgICAgIH1cbiAgICB9O1xuICAgIHRyYXZlcnNlKGFyeSk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbn07XG5leHBvcnQgY29uc3Qgbm9Vc2VkRnVuYyA9ICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnbm9Vc2VkJyk7XG59O1xuZXhwb3J0IGNvbnN0IG5vVXNlZEZ1bmMxID0gKCkgPT4ge1xuICAgIGNvbnNvbGUubG9nKCdub1VzZWQnKTtcbn07XG5leHBvcnQgY29uc3Qgbm9Vc2VkRnVuYzIgPSAoKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ25vVXNlZCcpO1xufTtcbmV4cG9ydCBjb25zdCBub1VzZWRGdW5jMyA9ICgpID0+IHtcbiAgICBjb25zb2xlLmxvZygnbm9Vc2VkJyk7XG59O1xuIiwiaW1wb3J0IHsganN4IGFzIF9qc3ggfSBmcm9tIFwicmVhY3QvanN4LXJ1bnRpbWVcIjtcbmltcG9ydCB7IFJvdXRlLCBSb3V0ZXMgfSBmcm9tIFwicmVhY3Qtcm91dGVyXCI7XG5pbXBvcnQgcm91dGVDb25maWcgZnJvbSAnLi9yb3V0ZSc7XG5pbXBvcnQgeyBleHRyYWN0Um91dGVzIH0gZnJvbSBcIi4vdXRpbHNcIjtcbmNvbnN0IExheW91dENvbnRhaW5lciA9ICgpID0+IHtcbiAgICByZXR1cm4gKF9qc3goUm91dGVzLCB7IGNoaWxkcmVuOiBleHRyYWN0Um91dGVzKHJvdXRlQ29uZmlnKS5tYXAoKHJvdXRlKSA9PiAoX2pzeChSb3V0ZSwgeyBwYXRoOiByb3V0ZS5wYXRoLCBDb21wb25lbnQ6IHJvdXRlLmNvbXBvbmVudCB9LCByb3V0ZS5wYXRoKSkpIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBMYXlvdXRDb250YWluZXI7XG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuLy8gaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBMYXlvdXRDb250YWluZXIgZnJvbSAnLi9MYXlvdXQnO1xuaW1wb3J0IHsgQnJvd3NlclJvdXRlciB9IGZyb20gXCJyZWFjdC1yb3V0ZXJcIjtcbmNvbnNvbGUubG9nKCdhcHAnKTtcbmNvbnNvbGUubG9nKFwiMjJ2XCIpO1xuY29uc3QgQXBwID0gKCkgPT4ge1xuICAgIHJldHVybiAoX2pzeChCcm93c2VyUm91dGVyLCB7IGNoaWxkcmVuOiBfanN4KExheW91dENvbnRhaW5lciwge30pIH0pKTtcbn07XG5leHBvcnQgZGVmYXVsdCBBcHA7XG4iLCJpbXBvcnQgeyBqc3ggYXMgX2pzeCB9IGZyb20gXCJyZWFjdC9qc3gtcnVudGltZVwiO1xuaW1wb3J0IHsgY3JlYXRlUm9vdCB9IGZyb20gJ3JlYWN0LWRvbS9jbGllbnQnO1xuaW1wb3J0IEFwcCBmcm9tICcuL0FwcCc7XG5jb25zdCBkb21Ob2RlID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoJ3Jvb3QnKTtcbmNvbnN0IHJvb3QgPSBjcmVhdGVSb290KGRvbU5vZGUpO1xucm9vdC5yZW5kZXIoX2pzeChBcHAsIHt9KSk7XG4iLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuLy8gZXhwb3NlIHRoZSBtb2R1bGVzIG9iamVjdCAoX193ZWJwYWNrX21vZHVsZXNfXylcbl9fd2VicGFja19yZXF1aXJlX18ubSA9IF9fd2VicGFja19tb2R1bGVzX187XG5cbiIsIi8vIGRlZmluZSBnZXR0ZXIgZnVuY3Rpb25zIGZvciBoYXJtb255IGV4cG9ydHNcbl9fd2VicGFja19yZXF1aXJlX18uZCA9IChleHBvcnRzLCBkZWZpbml0aW9uKSA9PiB7XG5cdGZvcih2YXIga2V5IGluIGRlZmluaXRpb24pIHtcblx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8oZGVmaW5pdGlvbiwga2V5KSAmJiAhX193ZWJwYWNrX3JlcXVpcmVfXy5vKGV4cG9ydHMsIGtleSkpIHtcblx0XHRcdE9iamVjdC5kZWZpbmVQcm9wZXJ0eShleHBvcnRzLCBrZXksIHsgZW51bWVyYWJsZTogdHJ1ZSwgZ2V0OiBkZWZpbml0aW9uW2tleV0gfSk7XG5cdFx0fVxuXHR9XG59OyIsIl9fd2VicGFja19yZXF1aXJlX18uZyA9IChmdW5jdGlvbigpIHtcblx0aWYgKHR5cGVvZiBnbG9iYWxUaGlzID09PSAnb2JqZWN0JykgcmV0dXJuIGdsb2JhbFRoaXM7XG5cdHRyeSB7XG5cdFx0cmV0dXJuIHRoaXMgfHwgbmV3IEZ1bmN0aW9uKCdyZXR1cm4gdGhpcycpKCk7XG5cdH0gY2F0Y2ggKGUpIHtcblx0XHRpZiAodHlwZW9mIHdpbmRvdyA9PT0gJ29iamVjdCcpIHJldHVybiB3aW5kb3c7XG5cdH1cbn0pKCk7IiwiX193ZWJwYWNrX3JlcXVpcmVfXy5vID0gKG9iaiwgcHJvcCkgPT4gKE9iamVjdC5wcm90b3R5cGUuaGFzT3duUHJvcGVydHkuY2FsbChvYmosIHByb3ApKSIsInZhciBzY3JpcHRVcmw7XG5pZiAoX193ZWJwYWNrX3JlcXVpcmVfXy5nLmltcG9ydFNjcmlwdHMpIHNjcmlwdFVybCA9IF9fd2VicGFja19yZXF1aXJlX18uZy5sb2NhdGlvbiArIFwiXCI7XG52YXIgZG9jdW1lbnQgPSBfX3dlYnBhY2tfcmVxdWlyZV9fLmcuZG9jdW1lbnQ7XG5pZiAoIXNjcmlwdFVybCAmJiBkb2N1bWVudCkge1xuXHRpZiAoZG9jdW1lbnQuY3VycmVudFNjcmlwdCAmJiBkb2N1bWVudC5jdXJyZW50U2NyaXB0LnRhZ05hbWUudG9VcHBlckNhc2UoKSA9PT0gJ1NDUklQVCcpXG5cdFx0c2NyaXB0VXJsID0gZG9jdW1lbnQuY3VycmVudFNjcmlwdC5zcmM7XG5cdGlmICghc2NyaXB0VXJsKSB7XG5cdFx0dmFyIHNjcmlwdHMgPSBkb2N1bWVudC5nZXRFbGVtZW50c0J5VGFnTmFtZShcInNjcmlwdFwiKTtcblx0XHRpZihzY3JpcHRzLmxlbmd0aCkge1xuXHRcdFx0dmFyIGkgPSBzY3JpcHRzLmxlbmd0aCAtIDE7XG5cdFx0XHR3aGlsZSAoaSA+IC0xICYmICghc2NyaXB0VXJsIHx8ICEvXmh0dHAocz8pOi8udGVzdChzY3JpcHRVcmwpKSkgc2NyaXB0VXJsID0gc2NyaXB0c1tpLS1dLnNyYztcblx0XHR9XG5cdH1cbn1cbi8vIFdoZW4gc3VwcG9ydGluZyBicm93c2VycyB3aGVyZSBhbiBhdXRvbWF0aWMgcHVibGljUGF0aCBpcyBub3Qgc3VwcG9ydGVkIHlvdSBtdXN0IHNwZWNpZnkgYW4gb3V0cHV0LnB1YmxpY1BhdGggbWFudWFsbHkgdmlhIGNvbmZpZ3VyYXRpb25cbi8vIG9yIHBhc3MgYW4gZW1wdHkgc3RyaW5nIChcIlwiKSBhbmQgc2V0IHRoZSBfX3dlYnBhY2tfcHVibGljX3BhdGhfXyB2YXJpYWJsZSBmcm9tIHlvdXIgY29kZSB0byB1c2UgeW91ciBvd24gbG9naWMuXG5pZiAoIXNjcmlwdFVybCkgdGhyb3cgbmV3IEVycm9yKFwiQXV0b21hdGljIHB1YmxpY1BhdGggaXMgbm90IHN1cHBvcnRlZCBpbiB0aGlzIGJyb3dzZXJcIik7XG5zY3JpcHRVcmwgPSBzY3JpcHRVcmwucmVwbGFjZSgvIy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcPy4qJC8sIFwiXCIpLnJlcGxhY2UoL1xcL1teXFwvXSskLywgXCIvXCIpO1xuX193ZWJwYWNrX3JlcXVpcmVfXy5wID0gc2NyaXB0VXJsOyIsIi8vIG5vIGJhc2VVUklcblxuLy8gb2JqZWN0IHRvIHN0b3JlIGxvYWRlZCBhbmQgbG9hZGluZyBjaHVua3Ncbi8vIHVuZGVmaW5lZCA9IGNodW5rIG5vdCBsb2FkZWQsIG51bGwgPSBjaHVuayBwcmVsb2FkZWQvcHJlZmV0Y2hlZFxuLy8gW3Jlc29sdmUsIHJlamVjdCwgUHJvbWlzZV0gPSBjaHVuayBsb2FkaW5nLCAwID0gY2h1bmsgbG9hZGVkXG52YXIgaW5zdGFsbGVkQ2h1bmtzID0ge1xuXHQ3OTI6IDBcbn07XG5cbi8vIG5vIGNodW5rIG9uIGRlbWFuZCBsb2FkaW5nXG5cbi8vIG5vIHByZWZldGNoaW5nXG5cbi8vIG5vIHByZWxvYWRlZFxuXG4vLyBubyBITVJcblxuLy8gbm8gSE1SIG1hbmlmZXN0XG5cbl9fd2VicGFja19yZXF1aXJlX18uTy5qID0gKGNodW5rSWQpID0+IChpbnN0YWxsZWRDaHVua3NbY2h1bmtJZF0gPT09IDApO1xuXG4vLyBpbnN0YWxsIGEgSlNPTlAgY2FsbGJhY2sgZm9yIGNodW5rIGxvYWRpbmdcbnZhciB3ZWJwYWNrSnNvbnBDYWxsYmFjayA9IChwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiwgZGF0YSkgPT4ge1xuXHR2YXIgW2NodW5rSWRzLCBtb3JlTW9kdWxlcywgcnVudGltZV0gPSBkYXRhO1xuXHQvLyBhZGQgXCJtb3JlTW9kdWxlc1wiIHRvIHRoZSBtb2R1bGVzIG9iamVjdCxcblx0Ly8gdGhlbiBmbGFnIGFsbCBcImNodW5rSWRzXCIgYXMgbG9hZGVkIGFuZCBmaXJlIGNhbGxiYWNrXG5cdHZhciBtb2R1bGVJZCwgY2h1bmtJZCwgaSA9IDA7XG5cdGlmKGNodW5rSWRzLnNvbWUoKGlkKSA9PiAoaW5zdGFsbGVkQ2h1bmtzW2lkXSAhPT0gMCkpKSB7XG5cdFx0Zm9yKG1vZHVsZUlkIGluIG1vcmVNb2R1bGVzKSB7XG5cdFx0XHRpZihfX3dlYnBhY2tfcmVxdWlyZV9fLm8obW9yZU1vZHVsZXMsIG1vZHVsZUlkKSkge1xuXHRcdFx0XHRfX3dlYnBhY2tfcmVxdWlyZV9fLm1bbW9kdWxlSWRdID0gbW9yZU1vZHVsZXNbbW9kdWxlSWRdO1xuXHRcdFx0fVxuXHRcdH1cblx0XHRpZihydW50aW1lKSB2YXIgcmVzdWx0ID0gcnVudGltZShfX3dlYnBhY2tfcmVxdWlyZV9fKTtcblx0fVxuXHRpZihwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbikgcGFyZW50Q2h1bmtMb2FkaW5nRnVuY3Rpb24oZGF0YSk7XG5cdGZvcig7aSA8IGNodW5rSWRzLmxlbmd0aDsgaSsrKSB7XG5cdFx0Y2h1bmtJZCA9IGNodW5rSWRzW2ldO1xuXHRcdGlmKF9fd2VicGFja19yZXF1aXJlX18ubyhpbnN0YWxsZWRDaHVua3MsIGNodW5rSWQpICYmIGluc3RhbGxlZENodW5rc1tjaHVua0lkXSkge1xuXHRcdFx0aW5zdGFsbGVkQ2h1bmtzW2NodW5rSWRdWzBdKCk7XG5cdFx0fVxuXHRcdGluc3RhbGxlZENodW5rc1tjaHVua0lkXSA9IDA7XG5cdH1cblx0cmV0dXJuIF9fd2VicGFja19yZXF1aXJlX18uTyhyZXN1bHQpO1xufVxuXG52YXIgY2h1bmtMb2FkaW5nR2xvYmFsID0gc2VsZltcIndlYnBhY2tDaHVua3NlbGZcIl0gPSBzZWxmW1wid2VicGFja0NodW5rc2VsZlwiXSB8fCBbXTtcbmNodW5rTG9hZGluZ0dsb2JhbC5mb3JFYWNoKHdlYnBhY2tKc29ucENhbGxiYWNrLmJpbmQobnVsbCwgMCkpO1xuY2h1bmtMb2FkaW5nR2xvYmFsLnB1c2ggPSB3ZWJwYWNrSnNvbnBDYWxsYmFjay5iaW5kKG51bGwsIGNodW5rTG9hZGluZ0dsb2JhbC5wdXNoLmJpbmQoY2h1bmtMb2FkaW5nR2xvYmFsKSk7IiwiLy8gc3RhcnR1cFxuLy8gTG9hZCBlbnRyeSBtb2R1bGUgYW5kIHJldHVybiBleHBvcnRzXG4vLyBUaGlzIGVudHJ5IG1vZHVsZSBkZXBlbmRzIG9uIG90aGVyIGxvYWRlZCBjaHVua3MgYW5kIGV4ZWN1dGlvbiBuZWVkIHRvIGJlIGRlbGF5ZWRcbnZhciBfX3dlYnBhY2tfZXhwb3J0c19fID0gX193ZWJwYWNrX3JlcXVpcmVfXy5PKHVuZGVmaW5lZCwgWzUzOV0sICgpID0+IChfX3dlYnBhY2tfcmVxdWlyZV9fKDIzMykpKVxuX193ZWJwYWNrX2V4cG9ydHNfXyA9IF9fd2VicGFja19yZXF1aXJlX18uTyhfX3dlYnBhY2tfZXhwb3J0c19fKTtcbiJdLCJuYW1lcyI6WyJkZWZlcnJlZCIsInBhdGgiLCJjb21wb25lbnQiLCJjaGlsZHJlbiIsImNsYXNzTmFtZSIsInRvIiwic3JjIiwiYWEiLCJhbHQiLCJleHRyYWN0Um91dGVzIiwiYXJ5IiwicmVzdWx0IiwidHJhdmVyc2UiLCJyb3V0ZUxpc3QiLCJyb3V0ZSIsInB1c2giLCJBcnJheSIsImlzQXJyYXkiLCJwYXRoQ2hpbGRyZW4iLCJtYXAiLCJpdGVtIiwiT2JqZWN0IiwiYXNzaWduIiwiQ29tcG9uZW50IiwiY29uc29sZSIsImxvZyIsImRvbU5vZGUiLCJkb2N1bWVudCIsImdldEVsZW1lbnRCeUlkIiwiY3JlYXRlUm9vdCIsInJlbmRlciIsIkxheW91dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwibSIsIk8iLCJjaHVua0lkcyIsImZuIiwicHJpb3JpdHkiLCJub3RGdWxmaWxsZWQiLCJJbmZpbml0eSIsImkiLCJsZW5ndGgiLCJmdWxmaWxsZWQiLCJqIiwia2V5cyIsImV2ZXJ5Iiwia2V5Iiwic3BsaWNlIiwiciIsImQiLCJkZWZpbml0aW9uIiwibyIsImRlZmluZVByb3BlcnR5IiwiZW51bWVyYWJsZSIsImdldCIsImciLCJnbG9iYWxUaGlzIiwidGhpcyIsIkZ1bmN0aW9uIiwiZSIsIndpbmRvdyIsIm9iaiIsInByb3AiLCJwcm90b3R5cGUiLCJoYXNPd25Qcm9wZXJ0eSIsImNhbGwiLCJzY3JpcHRVcmwiLCJpbXBvcnRTY3JpcHRzIiwibG9jYXRpb24iLCJjdXJyZW50U2NyaXB0IiwidGFnTmFtZSIsInRvVXBwZXJDYXNlIiwic2NyaXB0cyIsImdldEVsZW1lbnRzQnlUYWdOYW1lIiwidGVzdCIsIkVycm9yIiwicmVwbGFjZSIsInAiLCJpbnN0YWxsZWRDaHVua3MiLCJjaHVua0lkIiwid2VicGFja0pzb25wQ2FsbGJhY2siLCJwYXJlbnRDaHVua0xvYWRpbmdGdW5jdGlvbiIsImRhdGEiLCJtb3JlTW9kdWxlcyIsInJ1bnRpbWUiLCJzb21lIiwiaWQiLCJjaHVua0xvYWRpbmdHbG9iYWwiLCJzZWxmIiwiZm9yRWFjaCIsImJpbmQiLCJfX3dlYnBhY2tfZXhwb3J0c19fIl0sInNvdXJjZVJvb3QiOiIifQ==